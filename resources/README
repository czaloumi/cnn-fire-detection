To follow my project, in src, run cnn_fire.py to bypass all of these steps. Next run image_dataset_from_dir.py and lastly, run google_collab_GAMECHANGER.ipynb.

These are here for reference and were used throughout the week.

Initially, to follow this project, you would have needed to run the files in the following order:

1. train_test_val.py
  * separates fire_images and non_fire_images downloaded from kaggle into a train, test, and val folder with corresponding fire and non-fire subfolders.
  
2. cnn_model1.py *optional*
  * optional first model
  * read notes about outputs at top of file
  
3. cnn_model2.py
  * best model
  * saves weights according to checkpoint
  
4. best_model.py
  * saves model from cnn_model2.py as 'bestmodel.h5'
  
5. best_model_exploring.py
  * loads in 'bestmodel.h5'
  * plots/saves 'bestmodel_performance.jpeg' with 6 fire/nonfire images total w/predictions and original labels

Other files (do not need to be run):
 * cleaning_folders.py == after finding non fire images in my fire folders, used this file to clean
 * gen_images == original method I used to generate images; bypassed this step when it was killing computer's memory from saving too many image arrays
 * main.ipynb == original method to save images to arrays and then plot
